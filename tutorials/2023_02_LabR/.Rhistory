html_node("table.days.ng-star-inserted") %>%
html_node("thead") %>%
html_table(header = T)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(header = T)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_children()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(header = T)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(header = T) %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(trim = T) %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(fill = T) %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(fill = F) %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table(na.strings = " ") %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_attr()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_attrs()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_table()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_node("table")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_node("table") %>%
html_table() %>%
View()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_node("table") -> x
x[[1]] %>%
html_table() %>%
View()
x[[1]]
x[[1]] %>%
html_table()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_node("table") %>%
html_table()
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_node("table") %>%
html_table(header = TRUE)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("thead") %>%
html_table(header = T)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table")
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
library(xml2)
library(rvest)
url <- "https://www.wunderground.com/history/monthly/KBZN/date/2022-9"
page <- read_html(url) #Creates an html document from URL
html_node("table.days.ng-star-inserted") %>%
html_node("thead") %>%
html_table(header = T)
html_node("table.days.ng-star-inserted") %>%
html_node("thead")
html_node("table.days.ng-star-inserted")
seq.Date(from = "1980-1", to = "2022-9")
?seq.Date
as.Date("1980-1")
as.Date("1980-1")
as.Date("1980/1")
seq.Date(from = "1980-1", to = "2022-9", by = "month")
as.Date("1980-1", "%Y%m")
as.Date("19801", "%Y%m")
?as.Date
as.Date("1980-1", "%Y-%m")
as.Date("1980-1", "%Y-%m")
as.Date("1980/1", "%Y/%m")
as.Date("1980", "%Y/%m")
as.Date("1980", "%Y")
as.Date("198001", "%Y%m")
as.Date("011980", "%Y%m")
as.Date("1980-01", "%Y%m")
as.Date("1980-01", "%Y\\-%m")
years <- 1980:2022
month <- 1:12
years_range <- 1980:2022
months_range <- 1:12
paste0(years_range,"-",months_range)
paste0(years_range,"-",months_range, recycle0 = TRUE)
paste0(years_range,"-",months_range, recycle0 = F)
expand.grid(years_range, months_range)
apply(expand.grid(years_range, months_range), 1, paste, collapse="-")
sort(apply(expand.grid(years_range, months_range), 1, paste, collapse="-"))
years_range <- 1980:2022
months_range <- 1:12
year_month_comb <- sort(apply(expand.grid(years_range, months_range), 1, paste, collapse="-"))
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
html %>% read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("thead") %>%
html_table(header = T)
?for
ym[1]
ym = year_month_comb[1]
ym
# Use RSelenium to browse the site
weather_link <- paste0("https://www.wunderground.com/history/monthly/KBZN/date/",
year_month_comb[ym])
remDr$navigate(weather_link)
# Check and start servers for Selenium
## Driver
r_driv <- rsDriver(port = 4812L, chromever = '105.0.5195.19',
##Define a versão do Chrome que o Webdriver deve utilizar
#chromever = '105.0.5195.125',
##Remove as informações do console
verbose = F)
library(RSelenium)
library(XML)
# Check and start servers for Selenium
## Driver
r_driv <- rsDriver(port = 4812L, chromever = '105.0.5195.19',
##Define a versão do Chrome que o Webdriver deve utilizar
#chromever = '105.0.5195.125',
##Remove as informações do console
verbose = F)
## Remove driver
rem_driv <- remoteDriver(
remoteServerAddr = "localhost",
port = 4812L,
browserName = "chrome"
)
## Open
rem_driv$open(silent = T)
# Create year-month combination
years_range <- 1980:2022
months_range <- 1:12
year_month_comb <- sort(apply(expand.grid(years_range, months_range), 1, paste, collapse="-"))
# Create vector to store data
weather_data <- vector(mode = "list", length = length(year_month_comb))
for(ym in 1:length(year_month_comb)){
# Use RSelenium to browse the site
weather_link <- paste0("https://www.wunderground.com/history/monthly/KBZN/date/",
year_month_comb[ym])
# Navigate
rem_driv$navigate(weather_link)
# Get page
html <- rem_driv$getPageSource()[[1]]
# Extract table
year_month_comb[ym] <- html %>%
read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
}
# Create year-month combination
years_range <- 1980:2022
months_range <- 1:12
year_month_comb <- sort(apply(expand.grid(years_range, months_range), 1, paste, collapse="-"))
# Create vector to store data
weather_data <- vector(mode = "list", length = length(year_month_comb))
for(ym in 1:length(year_month_comb)){
# Use RSelenium to browse the site
weather_link <- paste0("https://www.wunderground.com/history/monthly/KBZN/date/",
year_month_comb[ym])
# Navigate
rem_driv$navigate(weather_link)
# Get page
html <- rem_driv$getPageSource()[[1]]
# Extract table
weather_data[ym] <- html %>%
read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
}
library(tidyverse)
for(ym in 1:length(year_month_comb)){
# Use RSelenium to browse the site
weather_link <- paste0("https://www.wunderground.com/history/monthly/KBZN/date/",
year_month_comb[ym])
# Navigate
rem_driv$navigate(weather_link)
# Get page
html <- rem_driv$getPageSource()[[1]]
# Extract table
weather_data[ym] <- html %>%
read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
}
library(RSelenium)
library(rvest)
library(tidyverse)
# Check and start servers for Selenium
## Driver
r_driv <- rsDriver(port = 4812L, chromever = '105.0.5195.19',
##Define a versão do Chrome que o Webdriver deve utilizar
#chromever = '105.0.5195.125',
##Remove as informações do console
verbose = F)
# Create vector to store data
weather_data <- vector(mode = "list", length = length(year_month_comb))
for(ym in 1:length(year_month_comb)){
# Use RSelenium to browse the site
weather_link <- paste0("https://www.wunderground.com/history/monthly/KBZN/date/",
year_month_comb[ym])
# Navigate
rem_driv$navigate(weather_link)
# Get page
html <- rem_driv$getPageSource()[[1]]
# Extract table
weather_data[ym] <- html %>%
read_html() %>%
html_node("table.days.ng-star-inserted") %>%
html_node("tbody") %>%
html_nodes("table") %>%
html_table(header = TRUE)
}
####################################
# 2022-09-19
####################################
### Load packages ###
library(tidyverse)
library(xlsx)
### Read data ###
# S. scitamineum resistance
ss_res <- read.xlsx("Pasta1.xlsx", sheetIndex = 1, header = F) %>%
`colnames<-`(c("Genotype","Resistance","Resistance Detail","DOI","Reference","Obs"))
180+480
60*9
60*0.09
62.45*24
66.53*24
66.53*24
1499+49
5+8+23+24+8+20
5+9+23+24+25+20
5+9+23+24+10+20
2000*6
2000*13
library(tidyverse)
list.files(pattern = ".csv")
###############################
# 2022 - 03 - 08
# Plot candidates expression
##############################
### Load tools ###
# Load renv folder
renv::load("../../../")
1000/35000
(1000/35000)*100
2017-1993
citation("edgeR")
BiocManager::install("recount")
library(recount)
abstract_search("GSE32465")
?abstract_search
abstract_search("Plant")
abstract_search("Crop")
abstract_search("sugarcane")
abstract_search("Sugarcane")
644 + 99 + 99
644 + 99 + 99 + 124
644 + 99 + 99 + 124 + 139
300/5
10000/300
33.33*57000
33.33*10000
300/10000
0.03*10000
0.03*57000
3/18
128+199
601-300
1650 - 941.88
3327-700
228+128
228+129
315701/8054255
(315701/8054255)*100
((180591+80682)/8054255)*100
(180591+80682)
5600-800
5600-800-1000
5600-800-1000+1500
5600-800-1000+1500+500
4300+1500
4300+1500-1000
4300+1500-1000+357
4300+1500-1000+357+300
4300+1500-1000+357+300+1000
3500.00/3
(10+28)/2
1300+239
1300+239+317
170+159
170+159-269
2973/2
2526/2
2918/2
2677.10/2
2871.18/2
2424.18/2
4300-1200
4300-2400
2815.74/2
4300-2800
2871.18/2
1435+300
2871.18+
1000
2871.18+1000
2871.18+1000-5549.20
2871.18+1000-5549.20+2871.18/2
2871.18+1000-5549.20-(2871.18/2)
2871.18+1000-5549.20-(2871.18/2)
170+159
209+159
(2871.18/2)
(2871.18/2)+1430
(2871.18/2)+1430+1590
5549.20-2677.10
5549.20-2677.10-194.08
159+159
1600+900
4+15
228+158
228.60+158.60
869.20+387.20
869.20+941.88
869.20+941.88+800
1600-300-109
1600-387-109
2800-1300
1500+387
1500+387+1500
1500+387+1500+500
1500+387+1500+500
1500+387+1500
1500+387+1500+500
151+190
323+190+180*2
323+190+120*2
99*2
counts_files[file_idx] %>% basename() %>%
gsub("*_","",.) %>%
gsub(".RData","",.)
library(tidyverse)
1800+1000
3*2*3
14-9
799/60
830/60
13.8+13.3
13 * 116
1508/60
13 * 3
1024*5.5
1024*0.055
165+171
160
160+160
4109-1843.75
4109-1843.75+125.96
4109-1843.75+125.96+1600
4109-1843.75+125.96+1600+1600
4109-1843.75+125.96+1600+1600+500
500000000/6
500000000/6/2
cat("Hello World!")
cat("Hello World!")
cat("Hello World!")
# Comments
cat("Hello World!")
209+160
146+160
176+160
2.5+2+1
(2.5+2+1)/(2.5+1+1)
5.5/4.5
2*1*0.1
.25+0.2+0.1
0.25+0.1+0.1
.55/.45
16.3/1000
6.28/1000
1.23*0.0163+2*0.823*0.00628
2.5/1000
1/1000
0.0025+2*0.001+0.001
.25/1000
.25/1000 + 2*(0.1/1000) + 0.1/1000
0.001*2
0.0055*1000
116.98-31.03
116.98-31.03+159.98
116.98-31.03+159.98+175.20
451.13+68.90+464.40
451.13+68.90+464.40+12
451.13+68.90+464.40+12+30.44
451.13+68.90+464.40+12+30.44-464.40
451.13+68.90+464.40+12+30.44-464.40+200
451.13+68.90+464.40+12+30.44-464.40+240
240*0.1
240*0.01
12*2
12*3
12*5
7+7+4+7
25*3
5+6+3+6
25+20+3
1000/8
1000/16
52+18
## Packages ##
library(vcfR)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggdendro)
library(gridExtra)
library(dendextend)
library(tidyr)
library(purrr)
library(cowplot)
5000*12
5000*12*4
(5000*12*4)/5
0.02/25
25.02/25
25*3.5
1.15e+00
1.15^0
3600-1600
3600-1600+1600
3600-1600+1600+400
3600-1600+1600+400-1000
3600-1600+1600+400-1000+1600
3600-1600+1600+400-1000+1600+300
setwd("~/Documents/Data/Personal/www/fhc_www/tutorials/2023_02_LabR")
pizza_ingredients <- function(){
print("1 16 ounce ball of pizza dough, 12 to 16 ounces is fine")
}
pizza_ingredients()
pizza_ingredients <- function(){
print("1 16 ounce ball of pizza dough, 12 to 16 ounces is fine")
print("1 tablespoon olive oil, for rubbing dough")
print("1 cup pizza sauce")
print("3 ounces thinly sliced mozzarella cheese")
print("5 ounces shredded mozzarella cheese, about 1 and 1/4 cups")
}
pizza_ingredients()
